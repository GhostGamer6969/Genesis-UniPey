"""Add UUID primary keys to UserDb and OTPTransactionsDb

Revision ID: 4cf03fa022d2
Revises: aafbb86098cb
Create Date: 2024-07-26 15:52:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import uuid

# revision identifiers, used by Alembic.
revision = '4cf03fa022d2'
down_revision = 'aafbb86098cb'
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Add the new UUID 'new_id' columns with a default value
    op.add_column('users', sa.Column('new_id', postgresql.UUID(as_uuid=True), nullable=True, server_default=sa.text("uuid_generate_v4()")))
    op.add_column('otp_transactions', sa.Column('new_id', postgresql.UUID(as_uuid=True), nullable=True, server_default=sa.text("uuid_generate_v4()")))

    # Copy the values from the old id column to the new_id column
    op.execute('UPDATE users SET new_id = uuid_generate_v4()')
    op.execute('UPDATE otp_transactions SET new_id = uuid_generate_v4()')

    # Make new_id column NOT NULL
    op.alter_column('users', 'new_id', nullable=False)
    op.alter_column('otp_transactions', 'new_id', nullable=False)

    # Drop the old primary key constraint
    op.drop_constraint('users_pkey', 'users', type_='primary')
    op.drop_constraint('otp_transactions_pkey', 'otp_transactions', type_='primary')

    # Drop the old id columns
    op.drop_column('users', 'id')
    op.drop_column('otp_transactions', 'id')

    # Rename the new_id columns to id
    op.alter_column('users', 'new_id', new_column_name='id')
    op.alter_column('otp_transactions', 'new_id', new_column_name='id')

    # Create new primary key constraints
    op.create_primary_key('users_pkey', 'users', ['id'])
    op.create_primary_key('otp_transactions_pkey', 'otp_transactions', ['id'])
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('new_id', sa.Integer(), autoincrement=True, nullable=False))
    op.add_column('otp_transactions', sa.Column('new_id', sa.Integer(), autoincrement=True, nullable=False))

    # Copy the values from the old id column to the new_id column
    op.execute('UPDATE users SET new_id = nextval(\'users_id_seq\')')
    op.execute('UPDATE otp_transactions SET new_id = nextval(\'otp_transactions_id_seq\')')

    # Drop the old primary key constraint
    op.drop_constraint('users_pkey', 'users', type_='primary')
    op.drop_constraint('otp_transactions_pkey', 'otp_transactions', type_='primary')

    # Drop the new id columns
    op.drop_column('users', 'id')
    op.drop_column('otp_transactions', 'id')

    # Rename the new_id columns to id
    op.alter_column('users', 'new_id', new_column_name='id')
    op.alter_column('otp_transactions', 'new_id', new_column_name='id')

    # Create new primary key constraints
    op.create_primary_key('users_pkey', 'users', ['id'])
    op.create_primary_key('otp_transactions_pkey', 'otp_transactions', ['id'])
    # ### end Alembic commands ###
